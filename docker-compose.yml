version: '3.8'

services:
  # PHP Application
  web:
    build: .
    container_name: restaurant_app
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./RestaurantProject:/var/www/html
      - ./logs:/var/www/html/logs
      - ./apache_logs:/var/log/apache2
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS=rootpassword
      - DB_NAME=restaurantdb
    networks:
      - my_network
      - monitoring_network
    depends_on:
      - mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Existing MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql8_container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: restaurantdb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./restaurantDB.txt:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my_network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_network

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring_network

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - ./logs:/var/www/html/logs
      - ./apache_logs:/var/log/apache2
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring_network
      - my_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring_network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9100:9100
    networks:
      - monitoring_network

volumes:
  mysql_data:
  grafana_data:

networks:
  my_network:
    driver: bridge
  monitoring_network:
    driver: bridge